@mixin animationFill($var) {
    &[animation="fill"] {
        &:hover {
            box-shadow: inset 0 0 0 2em $var;
            color: #fff;
            transition: 1s;
        }
    }
}

@mixin animationClose($var) {
    &[animation="close"] {
        &:hover {
            box-shadow: inset -4em 0 0 0 ($var), inset 4em 0 0 0 ($var);
            transition: 1s;
            color: #fff;
        }
    }
}

@mixin animationPulse($var) {
    &[animation="pulse"] {
        &:hover {
            animation: pulse 1s infinite;
            box-shadow: 0 0 5px 5px $var;
            border-radius: 0;
            color: $var;
            background: #fff;
        }
        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 transparent;
            }
        }
    }
}

@mixin animationRaise($var) {
    &[animation="raise"] {
        &:hover {
            box-shadow: 0 0.5em 0.5em -0.4em $var;
            transform: translateY(-0.25em);
        }
    }
}

@mixin animationOffset($var) {
    &[animation="offset"] {
        &:hover {
            box-shadow: 0 0 0 0 $var, inset 6em 3.5em 0 0 $var;
            color: #fff;
        }
    }
}

button[animation="viuv"] {
    overflow: hidden;
    &:hover {
        &::after {
            background: colorOpacity(#fff, 0.5);
            content: '';
            position: absolute;
            width: 30%;
            height: 500%;
            top: -200%;
            transform: rotate(45deg);
            animation: viuv 1s infinite;
            @keyframes viuv {
                0% {
                    left: -50%;
                }
                100% {
                    left: 120%;
                }
            }
        }
    }
}

button[animation="outline-slide"] {
    overflow: hidden;
    &:hover {
        &::before,
        &::after {
            content: '';
            display: block;
            background: #fff;
            position: absolute;
            height: 2px;
            width: 92%;
        }
        &::before {
            top: 7%;
            animation: outline-slide-before 2s infinite;
            @keyframes outline-slide-before {
                0% {
                    left: 96%;
                }
                100% {
                    left: 4%;
                }
            }
        }
        &::after {
            bottom: 7%;
            animation: outline-slide-after 2s infinite;
            @keyframes outline-slide-after {
                0% {
                    right: 96%;
                }
                100% {
                    right: 4%;
                }
            }
        }
    }
}

button[animation="outline"] {
    &:hover {
        outline: 2px solid #fff;
        outline-offset: -6px;
    }
}

button[animation="scale"] {
    &:hover {
        transform: scale(0.9);
        transition: 0.5s;
    }
}

button[animation="skew"] {
    &:hover {
        animation: skew 2s infinite;
        @keyframes skew {
            0% {
                transform: skew(0, 0);
            }
            25% {
                transform: skew(3deg, 3deg);
            }
            75% {
                transform: skew(-6deg, -6deg);
            }
            100% {
                transform: skew(0, 0);
            }
        }
    }
}

button {
    position: relative;
    @each $button-name,
    $button-type in $color-set2 {
        &[type="#{$button-name}"] {
            &:hover {
                @include animationFill($button-type);
                @include animationClose($button-type);
                @include animationPulse($button-type);
                @include animationRaise($button-type);
                @include animationOffset($button-type);
            }
        }
    }
}

.button-area {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    button[mode="default"] {
        border-radius: remCalculation(4);
        border: 0;
        min-width: remCalculation(185);
        max-width: remCalculation(185);
        padding: remCalculation(13) 0;
        text-align: center;
        @include fontCalculation($semibold, 25, 32, $sourceSansPro, #fff);
        width: 50%;
        display: block;
        background: transparent;
        @each $button-name,
        $button-type in $color-set {
            &[type="#{$button-name}"] {
                background: $button-type;
                &:hover {
                    background: darken($button-type, 10);
                }
                &:active {
                    background: darken($button-type, 30);
                }
            }
        }
    }
    button[mode="oval"] {
        border-radius: remCalculation(40);
        border: 0;
        min-width: remCalculation(200);
        max-width: remCalculation(200);
        padding: remCalculation(13) 0;
        text-align: center;
        @include fontCalculation($semibold, 25, 32, $sourceSansPro, #fff);
        width: 50%;
        display: block;
        @each $button-name,
        $button-type in $color-set2 {
            &[type="#{$button-name}"] {
                background: $button-type;
                &:hover {
                    background: darken($button-type, 10);
                }
                &:active {
                    background: darken($button-type, 30);
                }
            }
        }
    }
    button[mode="border"] {
        border-radius: remCalculation(40);
        border: 0;
        min-width: remCalculation(200);
        max-width: remCalculation(200);
        padding: remCalculation(13) 0;
        text-align: center;
        @include fontCalculation($semibold, 25, 32, $sourceSansPro, #fff);
        width: 50%;
        display: block;
        @each $button-name,
        $button-type in $color-set2 {
            &[type="#{$button-name}"] {
                border: 2px solid $button-type;
                color: $button-type;
                background: transparent;
                &:hover {
                    border: 2px solid darken($button-type, 10);
                }
                &:active {
                    border: 2px solid darken($button-type, 30);
                }
            }
        }
    }
    button[mode="offset"] {
        border-radius: remCalculation(4);
        border: 0;
        min-width: remCalculation(185);
        max-width: remCalculation(185);
        padding: remCalculation(13) 0;
        text-align: center;
        @include fontCalculation($semibold, 25, 32, $sourceSansPro, #fff);
        width: 50%;
        display: block;
        background: transparent;
        @each $button-name,
        $button-type in $color-set {
            &[type="#{$button-name}"] {
                background: transparent;
                box-shadow: 0.3em 0.3em 0 0 $button-type, inset 0.3em 0.3em 0 0 $button-type;
                color: $button-type;
                &:active {
                    background: darken($button-type, 30);
                    color: #fff;
                }
            }
        }
    }
    /*Animation*/
}